name: Backend Service Deploy

on:
  push:
    paths:
      - backend/node/**
      - .github/workflows/backend_service_dev.yml

env:
  ECR_REPOSITORY: pocket-cards/backend
  ECS_CLUSTER_NAME: pocket-cards-cluster
  ECS_SERVICE_NAME: backend
  ECS_TAKS_DEFINITION: pocket-cards-backend
  ECS_TAKS_DEFINITION_FILE: task_definition.json
  WORKING_DIR: backend/node

jobs:
  build:
    runs-on: ubuntu-18.04
    environment:
      name: dev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Install AWS CLI
      - name: Install awscli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # Get latest task definition
      - name: update ecs task definition
        run: aws ecs describe-task-definition --task-definition $ECS_TAKS_DEFINITION | jq .taskDefinition > $ECS_TAKS_DEFINITION_FILE

      # Install AWS CLI
      - name: Show Environments
        run: |
          cat $ECS_TAKS_DEFINITION_FILE

      # ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # docker build and push
      - name: Build, tag, and push image to Amazon ECR
        working-directory: ${{ env.WORKING_DIR }}
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # update task definition
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TAKS_DEFINITION_FILE }}
          container-name: ${{ env.ECS_TAKS_DEFINITION }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE_NAME }}
          cluster: ${{ env.ECS_CLUSTER_NAME }}
          wait-for-service-stability: false