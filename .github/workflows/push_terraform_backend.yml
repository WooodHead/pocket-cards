name: PUSH_T) Backend Build

on:
  push:
    paths:
      - backend/nodejs/lambda/**
    branches-ignore:
      - releases/**
  workflow_run:
    workflows:
      - PUSH_T) Service Build
      - PUSH_B) Batch Build
    branches:
      - master
    types:
      - completed

env:
  AWS_DEFAULT_REGION: ap-northeast-1
  WORKING_DIR: backend/terraform
  WORKING_DIR_LAMBDA: backend/nodejs/lambda
  TF_WORKSPACE: dev
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # Install and Build
      - name: Build
        working-directory: ${{ env.WORKING_DIR_LAMBDA }}
        run: |
          yarn build:cognito
          yarn build:start
          yarn build:status
          yarn build:stop

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install the latest version of Terraform CLI 
      # and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

      # Backend init
      - name: Terraform Backend
        run: |
          terraform init
          terraform plan -out=backend
          terraform apply "backend"
