name: PUSH_T) Setup Build

on:
  push:
    paths:
      - infrastructure/terraform/setup/**
      - infrastructure/terraform/services/**
      - backend/terraform/**
      - .github/workflows/push_terraform_setup.yml
      - .github/workflows/push_terraform_services.yml
      - .github/workflows/push_terraform_backend.yml
    branches-ignore:
      - releases/**
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: ap-northeast-1
  WORKING_DIR: infrastructure/terraform/setup
  TF_WORKSPACE: dev
  TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
  TF_VAR_api_key_translation: ${{ secrets.TRANSLATION_API_KEY }}
  TF_VAR_api_key_ipa: ${{ secrets.IPA_API_KEY }}
  TF_VAR_identity_provider_id:  ${{ secrets.IDENTITY_PROVIDER_ID }}
  TF_VAR_identity_provider_secret:  ${{ secrets.IDENTITY_PROVIDER_SECRET }}

jobs:
  Update:
    runs-on: ubuntu-18.04
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI 
      # and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Terraform
        run: |
          terraform init
          terraform plan -out=setup
          terraform apply "setup"
